<?xml version="1.0" encoding="UTF-8" ?>

<!-- 我听用户组 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WT_GROUP">
  <!-- 对象定义:用户组信息 -->
  <resultMap id="groupMap" type="WtGroup">
    <id      column="id"              property="groupId"         jdbcType="VARCHAR"/>
    <result  column="groupNum"        property="groupNum"        jdbcType="VARCHAR"/>
    <result  column="groupName"       property="groupName"       jdbcType="VARCHAR"/>
    <result  column="groupSignature"  property="groupSignature"  jdbcType="VARCHAR"/>
    <result  column="groupPwd"        property="groupPwd"        jdbcType="VARCHAR"/>
    <result  column="groupImg"        property="groupImg"        jdbcType="VARCHAR"/>
    <result  column="groupType"       property="groupType"       jdbcType="INTEGER"/>
    <result  column="pId"             property="PId"             jdbcType="VARCHAR"/>
    <result  column="sort"            property="sort"            jdbcType="INTEGER"/>
    <result  column="createUserId"    property="createUserId"    jdbcType="VARCHAR"/>
    <result  column="groupMasterId"   property="groupMasterId"   jdbcType="VARCHAR"/>
    <result  column="adminUserIds"    property="adminUserIds"    jdbcType="VARCHAR"/>
    <result  column="defaultFreq"     property="defaultFreq"     jdbcType="VARCHAR"/>
    <result  column="descn"           property="descn"           jdbcType="VARCHAR"/>
    <result  column="cTime"           property="CTime"           jdbcType="TIMESTAMP"/>
    <result  column="lmTime"          property="lmTime"          jdbcType="TIMESTAMP"/>
    <result  column="groupCount"      property="groupCount"      jdbcType="INTEGER"/><!-- 来自子表plat_GroupUser -->
    <result  column="groupAlias"      property="groupAlias"      jdbcType="VARCHAR"/><!-- 来自子表plat_GroupUser -->
    <result  column="groupDescn"      property="groupDescn"      jdbcType="VARCHAR"/><!-- 来自子表plat_GroupUser -->
  </resultMap>

  <!-- 对象定义:组用户信息 -->
  <resultMap id="groupUserMap" type="WtGroupUser">
    <id      column="id"           property="id"           jdbcType="VARCHAR"/>
    <result  column="groupId"      property="groupId"      jdbcType="VARCHAR"/>
    <result  column="userId"       property="userId"       jdbcType="VARCHAR"/>
    <result  column="inviter"      property="inviter"      jdbcType="VARCHAR"/>
    <result  column="groupAlias"   property="groupAlias"   jdbcType="VARCHAR"/>
    <result  column="groupDescn"   property="groupDescn"   jdbcType="VARCHAR"/>
    <result  column="cTime"        property="CTime"        jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- 以下用户组============================================ -->
  <!-- 所有列 -->
  <sql id="Base_Column_List">
    a.id, a.groupNum, a.groupName, a.groupSignature, a.groupPwd, a.groupImg, a.groupType, a.pId, a.sort, a.createUserId, a.groupMasterId, a.adminUserIds, a.defaultFreq, a.descn, a.cTime, a.lmTime
  </sql>

  <!-- 条件子句 -->
  <sql id="WhereClauseByEntiey">
    <trim prefix="(" suffix=")" prefixOverrides="and">
      <if test="groupId!=null"> and a.id=#{groupId,jdbcType=VARCHAR}</if>
      <if test="groupNum!=null"> and a.groupNum=#{groupNum,jdbcType=VARCHAR}</if>
      <if test="groupName!=null"> and a.groupName=#{groupName,jdbcType=VARCHAR}</if>
      <if test="groupSignature!=null"> and a.groupSignature=#{groupSignature,jdbcType=VARCHAR}</if>
      <if test="groupPwd!=null"> and a.groupPwd=#{groupPwd,jdbcType=VARCHAR}</if>
      <if test="groupImg!=null"> and a.groupImg=#{groupImg,jdbcType=VARCHAR}</if>
      <if test="groupType!=null"> and a.groupType=#{groupType,jdbcType=INTEGER}</if>
      <if test="pId!=null"> and a.pId=#{pId,jdbcType=VARCHAR}</if>
      <if test="sort!=null and sort!=0"> and a.sort=#{sort,jdbcType=INTEGER}</if>
      <if test="createUserId!=null"> and a.createUserId=#{createUserId,jdbcType=VARCHAR}</if>
      <if test="groupMasterId!=null"> and a.groupMasterId=#{groupMasterId,jdbcType=VARCHAR}</if>
      <if test="adminUserIds!=null"> and a.adminUserIds=#{adminUserIds,jdbcType=VARCHAR}</if>
      <if test="defaultFreq!=null"> and a.defaultFreq=#{defaultFreq,jdbcType=VARCHAR}</if>
      <if test="descn!=null"> and a.descn=#{descn,jdbcType=VARCHAR}</if>
      <if test="CTime!=null"> and a.cTime=#{CTime,jdbcType=TIMESTAMP}</if>
      <if test="lmTime!=null"> and a.lmTime=#{lmTime,jdbcType=TIMESTAMP}</if>
    </trim>
  </sql>

  <!-- 新增数据 -->
  <insert id="insert" parameterType="java.util.Map"> insert into plat_Group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId!=null">id,</if>
      <if test="groupNum!=null">groupNum,</if>
      <if test="groupName!=null">groupName,</if>
      <if test="groupSignature!=null">groupSignature,</if>
      <if test="groupPwd!=null">groupPwd,</if>
      <if test="groupImg!=null">groupImg,</if>
      <if test="groupType!=null">groupType,</if>
      <if test="pId!=null">pId,</if>
      <if test="sort!=null and sort!=0">sort,</if>
      <if test="createUserId!=null">createUserId,</if>
      <if test="groupMasterId!=null">groupMasterId,</if>
      <if test="adminUserIds!=null">adminUserIds,</if>
      <if test="defaultFreq!=null">defaultFreq,</if>
      <if test="descn!=null">descn,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId!=null">#{groupId,jdbcType=VARCHAR},</if>
      <if test="groupNum!=null">#{groupNum,jdbcType=VARCHAR},</if>
      <if test="groupName!=null">#{groupName,jdbcType=VARCHAR},</if>
      <if test="groupSignature!=null">#{groupSignature,jdbcType=VARCHAR},</if>
      <if test="groupPwd!=null">#{groupPwd,jdbcType=VARCHAR},</if>
      <if test="groupImg!=null">#{groupImg,jdbcType=VARCHAR},</if>
      <if test="groupType!=null">#{groupType,jdbcType=INTEGER},</if>
      <if test="pId!=null">#{pId,jdbcType=VARCHAR},</if>
      <if test="sort!=null and sort!=0">#{sort,jdbcType=INTEGER},</if>
      <if test="createUserId!=null">#{createUserId,jdbcType=VARCHAR},</if>
      <if test="groupMasterId!=null">#{groupMasterId,jdbcType=VARCHAR},</if>
      <if test="adminUserIds!=null">#{adminUserIds,jdbcType=VARCHAR},</if>
      <if test="defaultFreq!=null">#{defaultFreq,jdbcType=VARCHAR},</if>
      <if test="descn!=null">#{descn,jdbcType=VARCHAR},</if>
    </trim>
  </insert>

  <!-- 修改 根据主键-->
  <update id="update" parameterType="java.util.Map">
    update plat_Group
    <set>
      <if test="groupNum!=null">groupNum=#{groupNum,jdbcType=VARCHAR},</if>
      <if test="groupName!=null">groupName=#{groupName,jdbcType=VARCHAR},</if>
      <if test="groupSignature!=null">groupSignature=#{groupSignature,jdbcType=VARCHAR},</if>
      <if test="groupPwd!=null">groupPwd=#{groupPwd,jdbcType=VARCHAR},</if>
      <if test="groupImg!=null">groupImg=#{groupImg,jdbcType=VARCHAR},</if>
      <if test="groupType!=null and groupType!=-1">groupType=#{groupType,jdbcType=VARCHAR},</if>
      <if test="pId!=null">pId=#{pId,jdbcType=VARCHAR},</if>
      <if test="sort!=null and sort!=0">sort=#{sort,jdbcType=INTEGER},</if>
      <if test="createUserId!=null">createUserId=#{createUserId,jdbcType=VARCHAR},</if>
      <if test="groupMasterId!=null">groupMasterId=#{groupMasterId,jdbcType=VARCHAR},</if>
      <if test="adminUserIds!=null">adminUserIds=#{adminUserIds,jdbcType=VARCHAR},</if>
      <if test="defaultFreq!=null">defaultFreq=#{defaultFreq,jdbcType=VARCHAR},</if>
      <if test="descn!=null">descn=#{descn,jdbcType=VARCHAR},</if>
      <if test="CTime!=null">cTime=#{CTime,jdbcType=TIMESTAMP},</if>
    </set>
    where id=#{groupId,jdbcType=VARCHAR}
  </update>

  <!-- 获得记录条数-->
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from plat_Group <if test="_parameter!=null">where <include refid="WhereClauseByEntiey"/></if>
  </select>
  <select id="judgeUserInGroup" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from plat_GroupUser a, plat_Group b, plat_User c
    where a.userId=c.id and a.groupId=b.id and
      a.userId=#{userId,jdbcType=VARCHAR} and a.groupId=#{groupId,jdbcType=VARCHAR}
  </select>

  <!-- 获得列表 -->
  <select id="getList" resultMap="groupMap" parameterType="java.util.Map">
    select a.*, b.groupCount, null groupAlias, null groupDescn
    from
      plat_Group a, 
      (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b
    where a.id=b.groupId
    <if test="_parameter!=null">
      <if test="orderByClause==null">and (<include refid="WhereClauseByEntiey"/>)</if>
    </if>
    <if test="orderByClause!=null">order by ${orderByClause}</if>
  </select>

  <!-- 获得一条数据 -->
  <select id="getInfo" resultMap="groupMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List"/>, b.groupCount, null groupAlias, null groupDescn
    from
      plat_Group a,
      (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b
    where a.id=b.groupId
    <if test="_parameter!=null">
      <if test="orderByClause==null">and (<include refid="WhereClauseByEntiey"/>)</if>
    </if>
  </select>
  <select id="getGroupById" resultMap="groupMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/>, b.groupCount, null groupAlias, null groupDescn
    from
      plat_Group a,
      (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b
    where a.id=b.groupId and id=#{value,jdbcType=VARCHAR}
  </select>

  <!-- 得到某用户所属的用户组 -->
  <select id="getGroupListByUserId" resultMap="groupMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.groupAlias, c.groupDescn  from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.id=c.groupId
  </select>

  <!-- 邀请我的组的列表 -->
  <select id="inviteMeGroupList" resultType="java.util.HashMap" parameterType="java.lang.String">
    select a.inviteMessage, a.inviteVector, b.*, c.id userId, a.inviteTime, b.id groupId, c.loginName, c.mailAddress,
      c.mainPhoneNum, c.descn userDescn, c.portraitBig, c.portraitMini, d.groupCount, null groupAlias, null groupDescn
    from
      wt_GroupInvite a, plat_Group b, plat_User c,
      (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) d
    <![CDATA[
    where a.groupId=b.id and a.aUserId=c.id and a.flag=1 and a.acceptFlag=0 and a.inviteVector>0
    ]]>
    and (b.groupType!=0 or (b.groupType=0 and a.managerFlag=1))
    and b.id=d.groupId
    and a.bUserId=#{value,jdbcType=VARCHAR}
    order by a.inviteTime desc
  </select>

  <!-- 得到某用户所创建的用户组 -->
  <select id="getCreateGroupListByUserId" resultMap="groupMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.groupAlias, c.groupDescn from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.createUserId=#{value, jdbcType=VARCHAR} and a.id=c.groupId
  </select>

  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getCreateGroupCount" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_Group where createUserId=#{value, jdbcType=VARCHAR} and groupType=1
  </select>
  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getCreateGroupLimitTimeCount" resultType="java.lang.Integer" parameterType="java.util.Map">
  <![CDATA[
    select count(*) from plat_Group where createUserId=#{userId, jdbcType=VARCHAR} and CTime>#{lastTimeMinutes, jdbcType=TIMESTAMP} and groupType=1
  ]]>
  </select>
  <!-- 判断所给定的组号是否重复 -->
  <select id="existGroupNum" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_Group where groupNum=#{value, jdbcType=VARCHAR}
  </select>
  <!-- 用户是否已在组 -->
  <select id="existUserInGroup" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*) from plat_GroupUser where groupId=#{groupId, jdbcType=VARCHAR} and userId=#{userId, jdbcType=VARCHAR}
  </select>

  <!-- 得到某用户所能管理的组 -->
  <select id="getManageGroupListByUserId" resultMap="groupMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.groupAlias, c.groupDescn from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.adminUserIds like '%${value}%' and a.id=c.groupId
  </select>

  <!-- 得到某用户为群主的组 -->
  <select id="getMasterGroupListByUserId" resultMap="groupMap" parameterType="java.lang.String">
    select a.*, b.groupCount, c.groupAlias, c.groupDescn from plat_Group a,
    (select groupId, count(userId) groupCount from plat_GroupUser group by groupId) b,
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) c
    where a.id=b.groupId and a.groupMasterId=#{value, jdbcType=VARCHAR} and a.id=c.groupId
  </select>

  <!-- 得到有未处理申请人的我所管理的用户组 -->
  <select id="existApplyUserGroupList" resultMap="groupMap" parameterType="java.lang.String">
    select a.*, b.groupCount, null groupAlias, null groupDescn  from plat_Group a,
    (select groupId, count(id) groupCount from plat_GroupUser group by groupId) b,
  <![CDATA[
    (select groupId, count(id) inviteCount from wt_GroupInvite where inviteVector<0 and flag=1 and acceptFlag=0 group by groupId) c,
  ]]>
    (select * from plat_GroupUser where userId=#{value, jdbcType=VARCHAR}) d
    where a.id=b.groupId and a.id=c.groupId and a.adminUserIds like '%#{value, jdbcType=VARCHAR}%' and a.id=d.grouopId
  </select>

  <!-- 删除数据 -->
  <delete id="delete" parameterType="java.lang.String">
    delete from plat_Group where id=#{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEntity" parameterType="java.util.Map">
    delete from plat_Group <if test="_parameter!=null"><include refid="WhereClauseByEntiey"/></if>
  </delete>

  <!-- 以下组内用户============================================ -->
  <!-- 新增数据 -->
  <insert id="insertGroupUser" parameterType="java.util.Map">
    insert into plat_GroupUser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id!=null">id,</if>
      <if test="groupId!=null">groupId,</if>
      <if test="userId!=null">userId,</if>
      <if test="inviter!=null">inviter,</if>
      <if test="groupAlias!=null">groupAlias,</if>
      <if test="groupDescn!=null">groupDescn,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id!=null">#{id,jdbcType=VARCHAR},</if>
      <if test="groupId!=null">#{groupId,jdbcType=VARCHAR},</if>
      <if test="userId!=null">#{userId,jdbcType=VARCHAR},</if>
      <if test="inviter!=null">#{inviter,jdbcType=VARCHAR},</if>
      <if test="groupAlias!=null">#{groupAlias,jdbcType=VARCHAR},</if>
      <if test="groupDescn!=null">#{groupDescn,jdbcType=VARCHAR},</if>
    </trim>
  </insert>
  <!-- 删除数据 -->
  <delete id="deleteGroupUser" parameterType="java.util.Map">
    delete from plat_GroupUser where groupId=#{groupId,jdbcType=VARCHAR} <if test="userId!=null">and userId=#{userId,jdbcType=VARCHAR}</if>
  </delete>
  <!-- 得到某用户所创建的用户组的数量 -->
  <select id="getUserInGroupRefListByGroupId" resultMap="groupUserMap" parameterType="java.lang.String">
    select * from plat_GroupUser where groupId=#{groupId, jdbcType=VARCHAR} order by cTime desc
  </select>
  <!-- 根据用户Id和组Id修改用户所在组表 -->
  <update id="updateGroupUserByUserIdGroupId"  parameterType="java.util.Map">
    update plat_GroupUser
    <set>
      <if test="inviter!=null">inviter=#{inviter,jdbcType=VARCHAR},</if>
      <if test="groupAlias!=null">groupAlias=#{groupAlias,jdbcType=VARCHAR},</if>
      <if test="groupDescn!=null">groupDescn=#{groupDescn,jdbcType=VARCHAR},</if>
    </set>
    where groupId=#{groupId,jdbcType=VARCHAR} and userId=#{userId,jdbcType=VARCHAR}
  </update>
</mapper>